syntax = "proto3";

package grpc;

option go_package = "internal/proto";

service LogStreamService {
  rpc UploadLogs(stream LogMessage) returns (UploadLogsResponse);
}

service CommandService {
  rpc GetCommand(PingCommand) returns (Command);
}

service TransportService {
  rpc Upload(stream CMDLine) returns (stream CMDCommand);
}

enum CMDType {
  QEMUVM = 0;
  QEMUMonitor = 1;
  MCPServer = 2;
}

message CMDLine {
  string client_id = 1;
  CMDType type = 2;
  string msg = 3;
}

message CMDCommand {
  string client_id = 1;
  CMDType type = 2;
  string command = 3;
}

message LogMessage {
  string client_id = 1;
  string timestamp = 2;
  LogLevel level = 3;
  string message = 4;
}

enum LogLevel {
  DEBUG = 0;
  INFO = 1;
  WARN = 2;
  ERROR = 3;
  FATAL = 4;
}

message UploadLogsResponse {
  bool success = 1;
  string message = 2;
}

message PingCommand {
  string client_id = 1;
  string time = 2;
}

message Command {
  string command_id = 1;
  CommandType type = 2;
  string target_client = 3;
  string payload = 4;
  map<string, string> params = 5;
  bool no_command_available = 6;
}

enum CommandType {
  COMMAND_TYPE_UNSPECIFIED = 0;
  PONG = 1;
  OPEN_SSH = 2;
  OPEN_QEMU_MONITOR = 3;
  EXECUTE_SHELL = 4;
  RESTART_SERVICE = 5;
  CUSTOM = 6;
}